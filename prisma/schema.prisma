// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int             @id @default(autoincrement())
  firstname               String
  lastname                String
  email                   String          @unique
  balance                 Decimal         @default(0.00) @db.Decimal(10, 2)
  password                String
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  tokens                  Token[]
  deposits                Deposit[]
  transactions            Transaction[]

}

model Token {
  id                      Int             @id @default(autoincrement())
  refreshToken            String   
  expiresAt               DateTime 
  userId                  Int      
  user                    User            @relation(fields: [userId], references: [id])
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt

  @@index([refreshToken]) 
}

model Deposit {
  id                      Int             @id @default(autoincrement())
  amount                  Decimal         @db.Decimal(10, 2)
  reference               String          @unique
  status                  String          @default("pending")
  userId                  Int    
  user                    User            @relation(fields: [userId], references: [id])
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
}

enum transactionType {
  deposit
  order_purchase @map("order purchase")
}

model Transaction {
  id                      Int             @id @default(autoincrement())
  amount                  Decimal         @db.Decimal(10, 2)
  type                    transactionType           
  reference               String          @unique
  remark                  String          
  userId                  Int    
  user                    User            @relation(fields: [userId], references: [id])
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
}
